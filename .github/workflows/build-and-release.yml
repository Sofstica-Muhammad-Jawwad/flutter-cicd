name: Build And Release

on:
  create:
    branches:
      - 'release/*'  # Trigger only for branches starting with 'release/'

env:
  KEY_JKS: ${{ secrets.ANDROID_KEYSTORE_BASE64 }}

permissions:
  contents: write  # Allow push to the repository
  actions: read    # Allow reading action logs (optional)

jobs:
  build-and-releases:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set Git user
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: If branch doesn't start with 'release/'
        run: |
          BRANCH_NAME=${GITHUB_REF#refs/heads/}
          if [[ ! "$BRANCH_NAME" =~ ^release/ ]]; then
            echo "This is not a release branch, exiting..."
            echo "is_release_android_upload=false" >> $GITHUB_ENV  # Set environment variable to false
            echo "is_rename_branch=false" >> $GITHUB_ENV
            exit 0
          else
            echo "ðŸŽ‰ðŸŽ‰ðŸŽ‰ New release branch created: $GITHUB_REF ðŸŽ‰ðŸŽ‰ðŸŽ‰"
            if [[ "$BRANCH_NAME" == *"-android"* ]]; then
              echo "The branch contains 'android', running the new job."
              echo "is_release_android_upload=true" >> $GITHUB_ENV  # Set environment variable to true
              echo "is_rename_branch=true" >> $GITHUB_ENV
            else
              echo "The branch does not contain 'android'."
              echo "is_android_branch=false" >> $GITHUB_ENV  # Set environment variable to false
              echo "is_rename_branch=false" >> $GITHUB_ENV
            fi
          fi

      - name: Rename release/X.X.X-release-type to release/X.X.X
        if: ${{ env.is_rename_branch == 'true' }}  # Only run for release branches
        run: |
          echo "ðŸŽ‰ðŸŽ‰ðŸŽ‰ ANDROID RELEASE BRANCH ðŸŽ‰ðŸŽ‰ðŸŽ‰"
          BRANCH_NAME=${GITHUB_REF#refs/heads/}
          REMOVE_STRING="-android"

          if [[ "$BRANCH_NAME" == *"$REMOVE_STRING"* ]]; then
            NEW_BRANCH_NAME="${BRANCH_NAME/$REMOVE_STRING/}"
            echo "Branch name before: $BRANCH_NAME"
            echo "Branch name after removing '$REMOVE_STRING': $NEW_BRANCH_NAME"

            echo "NEW_BRANCH_NAME=$NEW_BRANCH_NAME" >> $GITHUB_ENV

            # Fetch all branches and create a new branch
            git fetch --all
            echo "Create a new branch from the current branch"
            git checkout -b $NEW_BRANCH_NAME

            echo "Push the new branch to the remote repository"
            git push origin $BRANCH_NAME
            git push origin $NEW_BRANCH_NAME

            echo "Delete the old branch from remote"
            git push origin --delete $BRANCH_NAME

            echo "Set the upstream branch for the renamed branch"
            git push --set-upstream origin $NEW_BRANCH_NAME

            # Add a 'v' prefix to the NEW_BRANCH_NAME (e.g., 'release/1.0.0' -> 'v1.0.0')
            TAG_NAME="v${NEW_BRANCH_NAME#release/}"
            echo "TAG_NAME=$TAG_NAME" >> $GITHUB_ENV
          fi

      - name: Set up JDK 17
        if: ${{ env.is_rename_branch == 'true' }}  # Only run for release branches
        uses: actions/setup-java@v3
        with:
          distribution: 'adopt'
          java-version: '17'
          cache: "gradle"

      - name: Set up Flutter (with compatible version)
        if: ${{ env.is_rename_branch == 'true' }}  # Only run for release branches
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.16.2'  # Update to a version that is compatible with Dart SDK >= 3.2.2

      - name: Flutter Clean
        if: ${{ env.is_rename_branch == 'true' }}  # Only run for release branches
        run: flutter clean

      - name: Build Apk
        if: ${{ env.is_rename_branch == 'true' }}  # Only run for release branches
        run: flutter build apk --release

      - name: Upload APK
        if: ${{ env.is_rename_branch == 'true' }}  # Only run for release branches
        uses: ncipollo/release-action@v1
        with:
          artifacts: "build/app/outputs/flutter-apk/app-release.apk"
          tag: ${{ env.TAG_NAME }}
          generateReleaseNotes: true  
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Pull Request from release branch to main
        if: ${{ env.is_rename_branch == 'true' }}
        uses: peter-evans/create-pull-request@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          title: "${{ env.NEW_BRANCH_NAME }}"
          branch: ${{ env.NEW_BRANCH_NAME }}  
          base: main  # Target branch (main)
          draft: false  # Set to `true` if you want the PR to be a draft, otherwise `false`
